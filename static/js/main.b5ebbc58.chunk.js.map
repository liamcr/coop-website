{"version":3,"sources":["back-arrow.svg","cooperatorsReport.png","components/Header.js","components/TheCooperators.js","components/Card.js","components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","render","document","getElementById","this","props","homePage","backButton","src","backArrow","onClick","back","height","alt","React","Component","TheCooperators","id","className","href","Card","componentToRender","backgroundImage","cooperatorsImage","bind","title","style","backgroundSize","HomePage","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,sSC2B5BC,G,qLAnBPC,iBACI,kBAAC,EAAD,MACAC,SAASC,eAAe,U,+BAK5B,IAAKC,KAAKC,MAAMC,SACZ,IAAIC,EAAa,yBAAKC,IAAKC,IAAWC,QAASN,KAAKO,KAAMC,OAAO,OAAOC,IAAI,SAEhF,OACI,gCACKN,EACD,sD,GAfKO,IAAMC,Y,OCqKZC,G,6LApKP,OACI,yBAAKC,GAAG,kBACJ,kBAAC,EAAD,CAAQX,UAAU,IAClB,2BAAOY,UAAY,OACf,mCACA,uBAAGA,UAAY,UAAUC,KAAK,aAA9B,YACA,uBAAGD,UAAY,UAAUC,KAAK,UAA9B,qBACA,uBAAGD,UAAY,UAAUC,KAAK,UAA9B,SACA,uBAAGD,UAAY,UAAUC,KAAK,mBAA9B,mBACA,uBAAGD,UAAY,UAAUC,KAAK,eAA9B,cACA,uBAAGD,UAAY,UAAUC,KAAK,oBAA9B,oBAEJ,yBAAKD,UAAU,UACX,uBAAGD,GAAG,YACN,gDACA,4CAGA,uBAAGA,GAAG,SACN,wCACA,+QAKA,kDAEA,+dAOA,8iBAQA,uBAAGA,GAAG,SACN,oaAOA,0DAEA,mGACA,qPAIA,6YAMA,4JAEA,kLAGA,oKAEA,gUAIA,2LAGA,gRAIA,qgBAOA,4ZAMA,yWAKA,uBAAGA,GAAG,kBACN,klBASA,gDAEA,0ZAMA,sXAKA,uBAAGA,GAAG,cACN,qwBAYA,2CAEA,uBAAGA,GAAG,mBACN,4vBAYA,gDAEA,4Y,GA1JSH,IAAMC,Y,iBCoCpBK,G,kBAlCX,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KAEDgB,kBAAoB,CACrB,mBAAoB,kBAAC,EAAD,OAExB,EAAKC,gBAAkB,CACnB,mBAAoBC,KAGxB,EAAKb,QAAU,EAAKA,QAAQc,KAAb,gBAVA,E,uEAcfvB,iBACIG,KAAKiB,kBAAkBjB,KAAKC,MAAMoB,OAClCvB,SAASC,eAAe,U,+BAK5B,OACI,yBAAKe,UAAY,OAAOR,QAAWN,KAAKM,QAASgB,MAC7C,CACIJ,gBAAgB,OAAD,OAASlB,KAAKkB,gBAAgBlB,KAAKC,MAAMoB,OAAzC,KACfE,eAAgB,UAGpB,4BAAKvB,KAAKC,MAAMoB,Y,GA7BbX,IAAMC,YCYVa,G,uLAXP,OACI,yBAAKV,UAAY,YACb,kBAAC,EAAD,CAAQZ,UAAU,IAClB,yBAAKW,GAAG,SACJ,kBAAC,EAAD,CAAMK,gBAAgB,IAAIG,MAAM,2B,GAN7BX,IAAMC,Y,MCOdc,MARf,WACE,OACE,yBAAKZ,GAAG,OACN,kBAAC,EAAD,QCKca,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBiC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b5ebbc58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back-arrow.5d914c21.svg\";","module.exports = __webpack_public_path__ + \"static/media/cooperatorsReport.bfa751e7.png\";","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport HomePage from './HomePage';\r\nimport backArrow from './../back-arrow.svg';\r\nimport './styles/Header.css';\r\n\r\nclass Header extends React.Component {\r\n    back() {\r\n        render(\r\n            <HomePage />,\r\n            document.getElementById('App')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.homePage) {\r\n            var backButton = <img src={backArrow} onClick={this.back} height=\"40px\" alt=\"Back\" />\r\n        }\r\n        return (\r\n            <header>\r\n                {backButton}\r\n                <h1>Work Term Reports</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport './styles/Report.css';\r\nimport './styles/TheCooperators.css';\r\n\r\nclass TheCooperators extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"TheCooperators\">\r\n                <Header homePage={false} />\r\n                <aside className = \"nav\">\r\n                    <h4>Nav</h4>\r\n                    <a className = \"navLink\" href=\"#abstract\">Abstract</a>\r\n                    <a className = \"navLink\" href=\"#about\">About the Company</a>\r\n                    <a className = \"navLink\" href=\"#goals\">Goals</a>\r\n                    <a className = \"navLink\" href=\"#jobDescription\">Job Description</a>\r\n                    <a className = \"navLink\" href=\"#conclusion\">Conclusion</a>\r\n                    <a className = \"navLink\" href=\"#acknowledgments\">Acknowledgments</a>\r\n                </aside>\r\n                <div className=\"Report\">\r\n                    <a id=\"abstract\">\r\n                    <h3>The Co-operators</h3>\r\n                    <em>Summer 2019</em>\r\n                    </a>\r\n\r\n                    <a id=\"about\">\r\n                    <h4>Abstract</h4>\r\n                    <p>In this report I will identify what I took away from this past work term. \r\n                        I will recount how I took the last four months as an opportunity to enhance \r\n                        my technical skills, as well as improve my ability to effectively work in a \r\n                        group setting.</p>\r\n\r\n                    <h4>About the Company</h4>\r\n                    </a>\r\n                    <p>Over the summer, I worked at The Co-operators in downtown Guelph. \r\n                        I worked with the automotive insurance team performing maintenance on \r\n                        PolicyCenter (A software used by agents to quote clients on their \r\n                        insurance policies). My job focussed on developing in an object-oriented \r\n                        programming language called Gosu. This language was developed by Guidewire \r\n                        (The company that developed the base version of PolicyCenter), and was \r\n                        heavily influenced by Java.</p>\r\n                    <p>As a company, a lot of the cutting-edge development being done relies on \r\n                        the sheer amount of data the company has access to. For example, one of \r\n                        the major projects being developed is the ability to assess a building’s \r\n                        risk of flooding or water damage down to the accuracy of an individual \r\n                        building. This is something no other insurance company in Canada has \r\n                        done (All risk evaluations for water are typically done at a postal code \r\n                        level of accuracy). The Co-operators are able to do this due to the data \r\n                        available to them.</p>\r\n                    <a id=\"goals\">\r\n                    <p>An interesting fact about the Co-operators is that the company is a \r\n                        co-operative rather than a corporation. This means that it is a business \r\n                        owned by the people using its services. Rather than make all business \r\n                        decisions based solely on potential profit and revenue, the wants and \r\n                        needs of the users also come into the equation due to the fact that the \r\n                        Co-operators Group is owned by them.</p>\r\n\r\n                    <h4>Goals/Learning Objectives</h4>\r\n                    </a>\r\n                    <p>First and foremost, what were my learning goals? Did I achieve them?</p>\r\n                    <h5>I would like to improve my oral communication skills by \r\n                        contributing/presenting something of significance to a meeting, which \r\n                        will allow me to further understand and be more engaged in the \r\n                        development of projects.</h5>\r\n                    <p>I presented my projects and progress in daily scrum meetings, as well \r\n                        as gave a few demos to a handful of people, but I never formally \r\n                        presented any feature in a significant meeting, such as the monthly team \r\n                        meetings. This was a doable goal, but I simply did not make enough of an \r\n                        effort to make it happen. It is surely something I will try to do in my \r\n                        future terms.</p>\r\n                    <h5>I would like to improve my problem-solving skills by learning how to \r\n                        efficiently understand and fix a complex issue on Jira.</h5>\r\n                    <p>This one ended up being a relatively easy goal to achieve, and by the end \r\n                        of the term I could tackle most Jira issues from the ground up on \r\n                        my own.</p>\r\n                    <h5>I would like to contribute a useful new feature to PolicyCenter \r\n                        (or any other software I may be helping in developing) from scratch.</h5>\r\n                    <p>One of the new features I added to PolicyCenter was a page that allowed \r\n                        the user to search for drivers by their ID, and re-enrol them into the \r\n                        company’s En-Route service. This was used whenever an initial enrol request \r\n                        failed, and proved to be a very helpful addition to the software.</p>\r\n                    <h5>I would like to improve my written communication skills by assisting in \r\n                        writing a professional document, such as documentation, or a testing plan \r\n                        document.</h5>\r\n                    <p>Aside from commenting all of the code I wrote; I never did anything more \r\n                        in terms of documentation. It is still something I wish I had made the \r\n                        time to do, but with all of the other responsibilities of the job, it fell \r\n                        off of my radar a bit.</p>\r\n                    <p>When coming up with my goals for the term, I tried to make sure they were \r\n                        related to my position. Resolving a complex issue on Jira and developing \r\n                        a new feature in PolicyCenter were very much related to my job \r\n                        responsibilities, as I was working with both Jira and PolicyCenter on a \r\n                        daily basis. Contributing something in a meeting, as well as writing \r\n                        documentation, are both tasks that were not necessary for an employee in \r\n                        my position, but are nonetheless very much related to my work.</p>\r\n                    <p>In terms of technical skills, I wanted to improve on both my ability \r\n                        to use object-oriented programming effectively, and my ability to \r\n                        write efficient SQL queries. These are both skills I have had experience \r\n                        with in the past, but I feel these are very important skills to know how \r\n                        to use effectively, and I made an effort to understand and learn new ways \r\n                        to write code and queries.</p>\r\n                    <p>In terms of soft skills, I wanted to learn how to be a more effective \r\n                        communicator and team member. Teamwork is arguably the most important \r\n                        skill when it comes to succeeding in the workplace, so I believe the \r\n                        improvement I saw in myself over the last 4 months will be very crucial \r\n                        when it comes to performance in future positions.</p>\r\n                    <a id=\"jobDescription\">\r\n                    <p>The two specific technologies I wanted to work with were Jira and Git. \r\n                        Jira is a very effective and prevalent technology when it comes to \r\n                        managing tasks and issues in a team environment. I will no doubt be \r\n                        using this technology in the future, so I wanted to get a head start and \r\n                        become familiar with it early. Git is the most common version-control \r\n                        system out there, and will be used at most places I work in the future. \r\n                        It’s an important tool to know how to use in a team setting as well as in \r\n                        an individual setting, so it will be no doubt helpful to learn.</p>\r\n\r\n                    <h4>Job Description</h4>\r\n                    </a>\r\n                    <p>I worked as a Junior Systems Developer on the PolicyCenter maintenance \r\n                        team. My job was to take user-submitted Jira issues, identify the root \r\n                        cause, and go through the formal process of fixing any defects within the \r\n                        code. Root-cause analysis was one of the more interesting parts of the job, \r\n                        as it was sort of like a puzzle to try and find the logic error in the \r\n                        large code base.</p>\r\n                    <p>The work environment was very agile. It was very open-concept so that \r\n                        everyone could easily communicate with one another, and every afternoon \r\n                        at 1:15 we had our daily scrum meeting where each person updated the team \r\n                        on what they have been working on, what they are currently working on, \r\n                        and what they will be working on until the next meeting.</p>\r\n                    <a id=\"conclusion\">\r\n                    <p>In order to succeed in this position, I needed teamwork skills, as well as \r\n                        skills in object-oriented programming and SQL. Teamwork was something I \r\n                        learned more about on the job than I had in school. I believe this is \r\n                        because I was working with experienced full-time employees that knew how \r\n                        to create an effective team environment. Object-oriented programming and \r\n                        SQL, however, were both skills that I learned more about in school, but \r\n                        working with them on a daily basis really helped me refine those skills \r\n                        even more. For example, a SQL join is a concept that I knew of from class, \r\n                        but I really needed to think hard about them in order to use them \r\n                        correctly. After using them every day, they have become very intuitive \r\n                        and easy to understand.</p>\r\n\r\n                    <h4>Conclusion</h4>\r\n                    </a>\r\n                    <a id=\"acknowledgments\">\r\n                    <p>Ultimately, this work term was a great learning experience for me. \r\n                        It was the first time I had really worked with a team on a project for \r\n                        so long, and it helped me improve my soft skills immensely. I had the \r\n                        freedom to refine and fine-tune my technical skills where I felt necessary, \r\n                        and my superiors helped me to achieve all of the goals that I wanted to. I \r\n                        did not realize all of my learning outcomes for the term, and I definitely \r\n                        have room to improve, but at the end of the day, the first work term is all \r\n                        about understanding how to work in a team environment and identifying where \r\n                        I can improve. I learned a lot over the past 4 months, and I am looking \r\n                        forward to using this knowledge to further improve in my future \r\n                        work terms.</p>\r\n\r\n                    <h4>Acknowledgments</h4>\r\n                    </a>\r\n                    <p>I would like to thank my co-workers for making these past four months \r\n                        so enjoyable. In particular, I want to thank my supervisor, Harvinder \r\n                        Sandhu, and my team: Barbie, Francisco, Rick, Victor, Sebastian, \r\n                        Anthony, and James. I also very much appreciate the work that Laura \r\n                        Gatto and Kate McRoberts put in to helping me find a place of employment \r\n                        for the term.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TheCooperators;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport TheCooperators from './TheCooperators'\r\nimport cooperatorsImage from './../cooperatorsReport.png';\r\nimport './styles/Card.css';\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.componentToRender = {\r\n            \"The Co-operators\": <TheCooperators />\r\n        };\r\n        this.backgroundImage = {\r\n            \"The Co-operators\": cooperatorsImage\r\n        };\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        render(\r\n            this.componentToRender[this.props.title],\r\n            document.getElementById('App')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"Card\" onClick = {this.onClick} style = {\r\n                {\r\n                    backgroundImage: `url(${this.backgroundImage[this.props.title]})`,\r\n                    backgroundSize: \"600px\"\r\n                }\r\n            }>\r\n                <h2>{this.props.title}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Header from './Header';\r\nimport Card from './Card';\r\nimport './styles/HomePage.css';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className = \"HomePage\">\r\n                <Header homePage={true}/>\r\n                <div id=\"cards\">\r\n                    <Card backgroundImage=\"#\" title=\"The Co-operators\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport HomePage from './components/HomePage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}